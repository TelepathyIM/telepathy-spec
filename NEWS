This file contains the same edited highlights as the announcement emails.
For full details, see the ChangeLog in tarballs, or "git log" in Git
checkouts.

telepathy-spec 0.21.3 (UNRELEASED)
==================================

…

telepathy-spec 0.21.2 (2010-10-15)
==================================

The "Ponderer of Witty Job Titles" release.

New stable API:

• Rejected error code for use with Call (jonny)

• StreamHandler now has StartNamedTelephonyEvent and StartSoundTelephonyEvent
  signals (ocrete)

Clarifications:

• Chan.I.Messages' three capability-discovery properties
  (DeliveryReportingSupport, MessagePartSupportFlags and SupportedContentTypes)
  are now stated to be immutable (smcv)

New experimental API:

• fd.o #30512: Conn.I.Keepalive, an interface to vary keepalive intervals at
  runtime (wjt)

• fd.o #30043: Handler.FUTURE.BypassObservers indicates that channels handled
  by the given handler shouldn't cause observers to be invoked (ptlo)

Changes to experimental API:

• Numerous changes to Call and its related interfaces (jonny)

Tools changes:

• fd.o #30511: add markup for immutable properties, requestable channel
  properties, and connection properties that are also parameters (jonny, wjt)

• Reject <tp:flag> values that are not a power of two, <tp:flags> that are
  not uint32, and duplicate flag and enum values (jonny)

• Warn on unexpected XML elements and dangling cross-references to errors,
  and optionally also on dangling cross-references to D-Bus interfaces (jonny)

telepathy-spec 0.21.1 (2010-09-29)
==================================

The "it's Wednesday, so this must be a spec release" release.

Changes to stable API:

• Account.RequestedPresence must not be Unset, Unknown or Error, while
  Account.AutomaticPresence must not be any of those or Offline, matching
  the behaviour that Mission Control has implemented in practice since
  version 5.1.2 (smcv)

• Account.CurrentPresence now allows a non-empty status or message for
  accounts that are offline or don't support SimplePresence (smcv)

New stable API:

• Conn.I.ClientTypes is now considered stable, with minor clarifications
  since draft 1, and the 'game' and 'sms' client types removed pending
  XMPP Registrar inclusion (jonny)

• The Access_Control_Type enum is a superset of
  Rich_Presence_Access_Control_Type, which it will supersede in future
  interfaces; similarly, Access_Control supersedes
  Rich_Presence_Access_Control (eeejay)

New experimental API:

• Conn.I.CommunicationPolicy allows incoming channels from particular
  contacts to be forbidden (eeejay)

• Conn.I.Resources allows connections with multiple resources or points of
  presence, such as on XMPP and MSN, to be represented (jonny)

telepathy-spec 0.21.0 (2010-09-22)
==================================

The "canteen DoS" release.

New stable API:

• ContactList and ContactGroups are now considered stable, with some
  clarifications to the wording, but no semantic changes since the drafts in
  version 0.20.0. (smcv)

telepathy-spec 0.20.1 (2010-09-15)
==================================

The "I can't build there!" release.

Fixes:

• Correct the tp:name-for-bindings on ServerCertificate to be
  Server_Certificate, leading to the intended names (server_certificate
  rather than servercertificate, etc.) in generated bindings. (smcv)

telepathy-spec 0.20.0 (2010-09-14)
==================================

This is a new stable version of telepathy-spec, intended to serve as a
reference point for future work. There were no API changes since development
release 0.19.13; changes from the year of development since 0.18.0 are
summarized below.

The versions of libraries, connection managers and Mission Control recommended
for use with GNOME 2.32 (the upcoming telepathy-glib 0.12, telepathy-gabble 0.10
and Mission Control 5.6 stable branches) can be expected to support most of
the API from this spec release.

Semantic changes
----------------

• The timestamps used for "user action time", intended for focus-stealing
  prevention, are no longer interpreted as seconds since 1970. Instead, they
  should be interpreted as X-server time on X GUI platforms,
  with two special values (0 and the maximum 64-bit signed integer) having
  their own semantics.

Enhancements to core API
------------------------

• Connection now has Status, Interfaces properties
• ConnectionManager now has Protocol objects with more information about
  protocols (at the time of release, this is supported in telepathy-gabble
  0.9.x but not in most other connection managers)
• Account.ChangingPresence indicates when changes are being attempted
• Account.Service indicates a specific service such as "google-talk"
• Account has extensible details of the last connection error
• Observers can have a Recover flag, which provides best-effort crash recovery
• ChannelDispatchOperation.HandleWithTime can pass through a timestamp for
  focus-stealing prevention
• various new error codes

New optional interfaces
-----------------------

• Account.I.Storage indicates which backend an account is stored in
• Conn.I.Anonymity, Chan.I.Anonymity — controlling caller-ID and similar
  features
• Conn.I.Balance — machine-readable account balance, e.g. SkypeOut credit
• Conn.I.Cellular — extra information about cellular connections
• Conn.I.ContactInfo — information that contacts provide about themselves,
  in a vCard-like format
• Conn.I.ServicePoint, Chan.I.ServicePoint — emergency contact points
• Chan.T.ServerTLSConnection — interactive approval of any problematic
  TLS/SSL certificates
• Chan.T.ContactSearch — searching for contacts by name, address etc.
• Chan.I.Conference — multi-user text or media conferences
  which can be made by merging or upgrading 1-1 channels
• Chan.I.SMS — SMS-specific extensions to Text channels (currently only
  one property, indicating class 0 "flash" SMSs)

Enhancements to optional interfaces
-----------------------------------

• chat states are state-recoverable
• a new flag indicates whether Location can be set

Changes since 0.19.13
---------------------

• improve wording of experimental Conn.I.ClientTypes and Conn.I.PowerSaving
  interfaces (danni, wjt)
