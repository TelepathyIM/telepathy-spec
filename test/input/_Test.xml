<?xml version="1.0" ?>
<node name="/_Test" xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright>Copyright (C) 2006 Collabora Limited</tp:copyright>
  <tp:license xmlns="http://www.w3.org/1999/xhtml">
<p>This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.</p>

<p>This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.</p>

<p>You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</p>
  </tp:license>
  <interface name="org.freedesktop.Telepathy.SpecAutoGenTest">

    <method name="DoStuff">
      <arg direction="in" name="badger" type="b">
        <tp:docstring>A badger, which MAY be breezy.</tp:docstring>
      </arg>
      <arg direction="in" name="mushroom" type="a{sv}">
        <tp:docstring>Use of hallucinogenic mushrooms will lead to undefined behaviour.</tp:docstring>
      </arg>
      <arg direction="in" name="snake" type="s">
        <tp:docstring>A snake, it's a snake.</tp:docstring>
      </arg>
      <arg direction="out" type="a(uv)">
        <tp:docstring>Array of structs containing whatever seems appropriate.</tp:docstring>
      </arg>
      <tp:possible-errors>
        <tp:error name="org.freedesktop.Telepathy.SpecAutoGenTest.MiscError"/>
        <tp:error name="org.freedesktop.Telepathy.SpecAutoGenTest.OtherError">
          <tp:docstring>Raised if the badger or the snake eats the mushrooms</tp:docstring>
        </tp:error>
      </tp:possible-errors>
      <tp:docstring>
        Does stuff.
      </tp:docstring>
    </method>

    <signal name="StuffHappened">
      <arg name="stoat" type="ay">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <em>Mustela erminea</em>
        </tp:docstring>
      </arg>
      <arg name="ferret" type="s">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <em>Mustela putorius furo</em>
        </tp:docstring>
      </arg>
      <arg name="weasel" type="b">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <em>Mustela nivalis</em> (or compatible)
        </tp:docstring>
      </arg>
      <tp:docstring>
        Emitted when stuff happened.
      </tp:docstring>
    </signal>

    <tp:flags name="Test_Flags" value-prefix="Test">
      <tp:docstring>A set of flags</tp:docstring>
      <tp:flag suffix="LowBit" value="1">
        <tp:docstring>
          A bit
        </tp:docstring>
      </tp:flag>
      <tp:flag suffix="HighBit" value="128">
        <tp:docstring>
          Another bit
        </tp:docstring>
      </tp:flag>
    </tp:flags>

    <tp:enum name="Adjective">
      <tp:docstring>Adjectives which may be applied to a specification</tp:docstring>
      <tp:enumvalue suffix="Leveraging" value="0">
        <tp:docstring>
          Can leverage synergy
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Synergistic" value="1">
        <tp:docstring>
          Can synergize with leverage
        </tp:docstring>
      </tp:enumvalue>
    </tp:enum>

    <tp:docstring>
      A test case for the spec processing.
    </tp:docstring>

  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
