<?xml version="1.0" ?>
<node name="/Channel_Request"
  xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">

  <tp:copyright>Copyright (C) 2008 Collabora Ltd.</tp:copyright>
  <tp:copyright>Copyright (C) 2008 Nokia Corporation</tp:copyright>
  <tp:license xmlns="http://www.w3.org/1999/xhtml">
    <p>This library is free software; you can redistribute it and/or
      modify it under the terms of the GNU Lesser General Public
      License as published by the Free Software Foundation; either
      version 2.1 of the License, or (at your option) any later version.</p>

    <p>This library is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
      Lesser General Public License for more details.</p>

    <p>You should have received a copy of the GNU Lesser General Public
      License along with this library; if not, write to the Free Software
      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
      MA 02110-1301, USA.</p>
  </tp:license>

  <interface name="org.freedesktop.Telepathy.ChannelRequest.DRAFT"
    tp:causes-havoc="experimental">

    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>A channel request is an object in the ChannelDispatcher representing
        an ongoing request for some channels to be created or found. There
        can be any number of ChannelRequest objects at the same time.</p>

      <p>Its well-known bus name is the same as that of the ChannelDispatcher,
        "org.freedesktop.Telepathy.ChannelDispatcher".</p>

      <tp:rationale>
        <p>See
          <tp:dbus-ref namespace="org.freedesktop.Telepathy">ChannelDispatcher.DRAFT.StartRequest</tp:dbus-ref>
          for rationale for ChannelRequest being a separate object.</p>
      </tp:rationale>
    </tp:docstring>

    <property name="UserActionTime" type="t" tp:type="Unix_Timestamp64"
      access="read">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>The time at which user action occurred, or 0 if this channel
          request is for some reason not involving user action.</p>

        <p>This corresponds to the _NET_WM_USER_TIME property in
          <a href="http://standards.freedesktop.org/wm-spec/wm-spec-latest.html">EWMH</a>.</p>

        <p>This property is set by
          <tp:member-ref>CreateChannelForAccount</tp:member-ref>.
          Before that method has been called, the contents of this
          property are undefined; after that method has been called,
          the contents of this property cannot change.</p>
      </tp:docstring>
    </property>

    <property name="Requests" type="aa{sv}"
      tp:type="Qualified_Property_Value_Map[]"
      access="read">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>The request or requests that have been made.</p>

        <p>This property is set by
          <tp:member-ref>CreateChannelForAccount</tp:member-ref>.
          Before that method has been called, the contents of this
          property are undefined; after that method has been called,
          the contents of this property cannot change.</p>
      </tp:docstring>
    </property>

    <method name="CreateChannelForAccount">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Request that a new channel is created.</p>

        <p>This method SHOULD return immediately; on success, the request
          might still fail, but this will be indicated asynchronously
          by the <tp:member-ref>Failed</tp:member-ref> signal.</p>

        <p>(FIXME: do we want channel requesting to be entirely
          account-based, or do we want to allow channel requests by
          Connection too?)</p>

        <p>(FIXME: something needs to explain what will happen if the Account
          is disabled - raise PermissionDenied here, or emit Failed?)</p>
      </tp:docstring>

      <arg direction="in" name="Account" type="o">
        <tp:docstring>
          The
            <tp:dbus-ref namespace="org.freedesktop.Telepathy">Account</tp:dbus-ref>
          for which the new channel is to be created.
        </tp:docstring>
      </arg>

      <arg direction="in" name="Request" type="a{sv}"
        tp:type="Qualified_Property_Value_Map">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>A dictionary containing desirable properties. This has the same
            semantics as the corresponding parameter to
            <tp:dbus-ref namespace="org.freedesktop.Telepathy">Connection.Interface.Requests.DRAFT.CreateChannel</tp:dbus-ref>.
          </p>

          <p>Certain properties will not necessarily make sense in this
            dictionary: for instance,
            <tp:dbus-ref namespace="org.freedesktop.Telepathy.Channel">TargetHandle</tp:dbus-ref>
            can only be given if the requester is able to interact with a
            <tp:dbus-ref namespace="org.freedesktop.Telepathy">Connection</tp:dbus-ref>
            to the desired account.</p>
        </tp:docstring>
      </arg>

      <arg direction="in" name="User_Action_Time" type="t"
        tp:type="Unix_Timestamp64">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>The time at which user action occurred, or 0 if this channel
            request is for some reason not involving user action.
            The <tp:member-ref>UserActionTime</tp:member-ref> property
            will be set to this value.</p>
        </tp:docstring>
      </arg>

      <arg direction="in" name="Preferred_Handler" type="s"
        tp:type="DBus_Bus_Name">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>Either the well-known bus name of the preferred handler for this
            channel, or an empty string to indicate that any handler would be
            acceptable. The channel dispatcher SHOULD dispatch as many as
            possible of the resulting channels (ideally, all of them)
            to that handler, and SHOULD remember the preferred handler
            so it can try to dispatch subsequent channels in the same bundle
            to the same handler.</p>

          <p>FIXME: perhaps this should just be a boolean, for
            "I want to claim the channel myself"</p>
        </tp:docstring>
      </arg>

      <tp:possible-errors>
        <tp:error name="org.freedesktop.Telepathy.Errors.NotAvailable">
          <tp:docstring>
            This method has already been called, so it is no longer
            available. Stop calling it.
          </tp:docstring>
        </tp:error>
      </tp:possible-errors>
    </method>

    <signal name="Failed">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>The channel request has failed. It is no longer present,
          and further methods must not be called on it.</p>
      </tp:docstring>

      <arg name="Error" type="s" tp:type="DBus_Error_Name">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          The name of a D-Bus error. This can come from various sources,
          including the error raised by CreateChannel, or an error generated
          to represent failure to establish the Connection.
        </tp:docstring>
      </arg>

      <arg name="Message" type="s">
        <tp:docstring>
          If the first argument of the D-Bus error message was a string,
          that string. Otherwise, an empty string.
        </tp:docstring>
      </arg>
    </signal>

    <signal name="Succeeded">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>The channel request has succeeded. It is no longer present,
          and further methods must not be called on it.</p>

        <p>(FIXME: should this signal reference the channels that were
          produced? If so, should they be the channels with Requested=TRUE,
          or all the channels in the NewChannels signal?)</p>
      </tp:docstring>

      <arg name="Channels" type="a(oa{sv})"
        tp:type="Channel_Details[]">
        <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
          <p>(FIXME: necessary?)</p>
        </tp:docstring>
      </arg>

    </signal>

  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
