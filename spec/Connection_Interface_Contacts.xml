<?xml version="1.0" ?>
<node name="/Connection_Interface_Contact_Attributes" xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright> Copyright (C) 2005-2008 Collabora Limited </tp:copyright>
  <tp:copyright> Copyright (C) 2005, 2006 Nokia Corporation </tp:copyright>
  <tp:copyright> Copyright (C) 2006 INdT </tp:copyright>
  <tp:license xmlns="http://www.w3.org/1999/xhtml">
    <p>This library is free software; you can redistribute it and/or modify it
      under the terms of the GNU Lesser General Public License as published by
      the Free Software Foundation; either version 2.1 of the License, or (at
      your option) any later version.</p>

    <p>This library is distributed in the hope that it will be useful, but
      WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser
      General Public License for more details.</p>

    <p>You should have received a copy of the GNU Lesser General Public License
      along with this library; if not, write to the Free Software Foundation,
      Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</p>
  </tp:license>
  <interface name="org.freedesktop.Telepathy.Connection.Interface.Contacts.DRAFT"
    tp:causes-havoc="experimental">
    <tp:requires interface="org.freedesktop.Telepathy.Connection"/>

    <tp:mapping name="Contact_Attributes_Map">
      <tp:docstring>Mapping returned by InspectContacts, representing a
        collection of Contacts and their requested attributes.</tp:docstring>
      <tp:member type="u" tp:type="Contact_Handle" name="Contact"/>
      <tp:member type="a{sv}" tp:type="String_Variant_Map" name="Attributes"/>
    </tp:mapping>

    <tp:simple-type name="Contact_Inspection_Command" type="s">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>String indicating specific fields to retrieve or action to perform
          for each contact given to <tp:dbus-ref
            namespace="org.freedesktop.Telepathy">Connection.Interface.Contacts.InspectContacts</tp:dbus-ref>.</p>

        <p>For each of the following 'get-&lt;attribute&gt;' commands not set in
          the commands argument to
          <tp:dbus-ref
            namespace="org.freedesktop.Telepathy">Connection.Interface.Contacts.InspectContacts</tp:dbus-ref>,
          the value of the corresponding attribute in the return value of
          InspectContacts is undefined and should be ignored.</p>

        <ul>
          <li>get-alias - include the alias attribute for each contact in the
            return value</li>
          <li>get-avatar-token - include the avatar-token attribute for each
            contact in the return value</li>
          <li>get-simple-presence - include the simple-presence attribute for
            each contact in the return value</li>
          <li>hold-handle - hold each contact handle, as if running <tp:dbus-ref
              namespace="org.freedesktop.Telepathy">Connection.HoldHandles</tp:dbus-ref>
            on each given handle</li>
        </ul>

        <tp:rationale>
          The reason unlisted attributes are undefined in the return value is
          to force the caller to ignore their values. For example, if
          InspectContacts is called with the 'get-alias' command, an empty
          string for an alias in the results means that the contact's alias is
          unset.  But if InspectContacts is called without the 'get-alias'
          command, even an empty string must not be interpreted as an unset
          alias (and the implementation is even free to leave garbage data in
          the resultant alias fields if it is more convenient than clearing
          them).
        </tp:rationale>
      </tp:docstring>
    </tp:simple-type>

    <method name="InspectContacts">
      <arg direction="in" name="handles" type="au" tp:type="Contact_Handle[]">
        <tp:docstring>
          An array of Handle_Type_Contact integer handles
        </tp:docstring>
      </arg>

      <arg direction="in" name="commands" type="as"
        tp:type="Contact_Inspection_Command[]">
        <tp:docstring>
          A list of strings indicating which commands to perform on each
          contact. See <tp:type>Contact_Inspection_Command</tp:type> for more
          details.
        </tp:docstring>
      </arg>

      <arg direction="out" type="a{ua{sv}}"
        tp:type="Contact_Attributes_Map">
        <tp:docstring>
          A dictionary mapping the contact handles to contact attributes.
        </tp:docstring>
      </arg>

      <tp:docstring>
        Return any number of basic contact attributes for the given handles.

        If a handle is invalid for any reason, an
        org.freedesktop.Telepathy.Error.InvalidHandle error will be raised, and
        that handle will be excluded from the results. In this case,
        InspectContacts will still return values for all the valid handles.
      </tp:docstring>

      <tp:possible-errors>
        <tp:error name="org.freedesktop.Telepathy.Error.Disconnected"/>
        <tp:error name="org.freedesktop.Telepathy.Error.InvalidArgument">
          The flags are invalid
        </tp:error>
        <tp:error name="org.freedesktop.Telepathy.Error.InvalidHandle">
          One of the given handles is inactive and/or not Handle_Type_Contact
        </tp:error>
      </tp:possible-errors>
    </method>

    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>This interface serves as a convenience wrapper for contacts.</p>

      <p>Rather than determining all contacts' attributes on a per-interface
        basis (eg, Aliasing, Avatars, Presence), this interface exposes
        contacts' attributes on a per-contact basis.</p>

      <p>Each contact attribute has an arbitrary string identifier which should
        have an agreed meaning between the connection manager and any client
        which is expected to make use of it. The following well-known attribute
        identifiers should be used where possible to allow clients to identify
        common attributes:</p>
      
      <table>
        <tr>
          <th>attribute identifier</th>
          <th>attribute type</th>
          <th>attribute value equivalent to value from method</th>
        </tr>
        <tr>
          <td>alias</td>
          <td>s</td>
          <td>
            <tp:dbus-ref
              namespace="org.freedesktop.Telepathy">Connection.Interface.Aliasing.RequestAliases</tp:dbus-ref>
          </td>
        </tr>
        <tr>
          <td>avatar-token</td>
          <td>s</td>
          <td>
            <tp:dbus-ref
              namespace="org.freedesktop.Telepathy">Connection.Interface.Avatars.GetAvatarTokens</tp:dbus-ref>
          </td>
        </tr>
        <tr>
          <td>simple-presence</td>
          <td><tp:type>Simple_Presence</tp:type></td>
          <td>
            <tp:dbus-ref
              namespace="org.freedesktop.Telepathy">Connection.Interface.SimplePresence.GetPresences</tp:dbus-ref>
          </td>
        </tr>
        <tr>
          <td>caps</td>
          <td><tp:type>Capability_Pair[]</tp:type></td>
          <td>
            <tp:dbus-ref namespace="org.freedesktop.Telepathy">Connection.Interface.Capabilities.AdvertiseCapabilities</tp:dbus-ref>
          </td>
        </tr>
      </table>

      <p>The contact attributes listed above may either be retrived via
        <tp:dbus-ref
          namespace="org.freedesktop.Telepathy">Connection.Interface.Contacts.InspectContacts</tp:dbus-ref>
        in a single call, or individually via the corresponding methods listed
        in the table above.</p>
    </tp:docstring>
  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
