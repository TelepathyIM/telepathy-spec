<?xml version="1.0" ?>
<node name="/Client"
  xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright>Copyright (C) 2008 Collabora Ltd.</tp:copyright>
  <tp:copyright>Copyright (C) 2008 Nokia Corporation</tp:copyright>
  <tp:license xmlns="http://www.w3.org/1999/xhtml">
    <p>This library is free software; you can redistribute it and/or
      modify it under the terms of the GNU Lesser General Public
      License as published by the Free Software Foundation; either
      version 2.1 of the License, or (at your option) any later version.</p>

    <p>This library is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
      Lesser General Public License for more details.</p>

    <p>You should have received a copy of the GNU Lesser General Public
      License along with this library; if not, write to the Free Software
      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
      02110-1301, USA.</p>
  </tp:license>

  <interface name="org.freedesktop.Telepathy.Client.ChannelHandler.DRAFT"
    tp:causes-havoc="experimental">
    <tp:added version="0.17.UNRELEASED"/>

    <tp:requires interface="org.freedesktop.Telepathy.Client.DRAFT"/>

    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>Channel handlers are the eventual handler for a channel or a
        channel bundle; a typical channel handler is a user interface
        process handling channels of a particular type.</p>

      <p>When a new incoming channel is offered to
        <tp:dbus-ref namespace="org.freedesktop.Telepathy.Client">Approver</tp:dbus-ref>s
        by the channel dispatcher, it also offers the Approvers a list of all
        the running or activatable ChannelHandlers whose
        <tp:member-ref>HandlerChannelFilter</tp:member-ref> property
        (possibly as cached in the .client file) indicates that they
        are able to handle the channel. The Approvers can choose one of
        those channel handlers to handle the channel.</p>

      <p>FIXME: interaction with outgoing channels?</p>

      <p>FIXME: interaction with automatically created channels?</p>
    </tp:docstring>

    <property name="HandlerChannelFilter" type="v" access="read">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>A specification of the channels that this channel handler can
          deal with. It will be offered to approvers as a potential
          channel handler for bundles that contain only suitable channels,
          or for suitable channels that must be handled separately.</p>

        <p>This property works in exactly the same way as the
          <tp:dbus-ref namespace="org.freedesktop.Telepathy">Client.Observer.DRAFT.ObserverChannelFilter</tp:dbus-ref>
          property. In the .client file, it is represented in the
          same way as ObserverChannelFilter, but the group has the same
          name as this interface and the keys start with
          HandlerChannelFilter instead of ObserverChannelFilter.</p>
      </tp:docstring>
    </property>

    <!-- FIXME: add the HandleAdditionalChannels method, which must
      return instantly, and if successful, fast-tracks the channels past any
      approvers if appropriate - see ChannelDispatchOperation for details -->

    <method name="HandleChannels">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Called by the channel dispatcher when an Approver indicates that
          this client should handle these channels.</p>

        <p>The channel handler SHOULD NOT take input focus as a result of
          this method; the channel dispatcher SHOULD call HandleChannels
          followed by Present if the channels were requested by explicit
          user action.</p>

        <tp:rationale>
          <p>Channels created as a side-effect of a request for other channels
            shouldn't get their handler in the foreground. Suppose AbiWord
            requests an XMPP MUC (chatroom) Tube, and joining this tube
            requires the CM to join a corresponding Text channel which is then
            handled by some handler other than AbiWord. In this case the Text
            channel handler shouldn't take focus away from AbiWord.</p>
        </tp:rationale>
      </tp:docstring>

      <!-- FIXME: other dispatching-related info? -->

      <arg name="Connection" type="o" direction="in">
        <tp:docstring>
          The Connection with which the channels are associated. The
          well-known bus name to use can be derived from this object
          path by removing the leading '/' and replacing all subsequent
          '/' by '.'.
        </tp:docstring>
      </arg>

      <arg name="Channels" type="a(oa{sv})" direction="in">
        <tp:docstring>
          The channels and their immutable properties. Their well-known
          bus name is the same as that of the Connection.
        </tp:docstring>
      </arg>

      <tp:possible-errors>
        <!-- FIXME -->
      </tp:possible-errors>
    </method>

    <method name="Present">
      <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
        <p>Present any user interface for the given channels to the user, i.e.
          bring it to the foreground, give it focus, or use some other way to
          bring it to the user's attention.</p>

        <p>This method is called by the channel dispatcher after channels
          are requested. As a result, it SHOULD only ever be called in
          response to user action, which means that the client
          MAY take input focus as a result.</p>

        <!-- FIXME: incorporate a focus-stealing-prevention timestamp
          somehow -->

        <p>If any of the given channels are not being handled by this
          channel handler, they MUST be ignored. The channel dispatcher
          MAY include channels in the argument even if this channel
          handler is not actually handling them, but SHOULD NOT call this
          method unless the channel handler is actually handling at least
          one of the channels.</p>
      </tp:docstring>

      <arg name="Connection" type="o" direction="in">
        <tp:docstring>
          The Connection with which the channels are associated. The
          well-known bus name to use can be derived from this object
          path by removing the leading '/' and replacing all subsequent
          '/' by '.'.
        </tp:docstring>
      </arg>

      <arg name="Channels" type="a(oa{sv})" direction="in">
        <tp:docstring>
          The channels and their immutable properties. Their well-known
          bus name is the same as that of the Connection.
        </tp:docstring>
      </arg>
    </method>

  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
