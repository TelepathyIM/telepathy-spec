<?xml version="1.0" ?>
<node name="/ChannelInterfaceGroup" xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright>
    Copyright (C) 2005, 2006 Collabora Limited
Copyright (C) 2005, 2006 Nokia Corporation
Copyright (C) 2006 INdT
  </tp:copyright>
  <tp:license>
    This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  </tp:license>
  <interface name="org.freedesktop.Telepathy.Channel.Interface.Group" tp:name-const="CHANNEL_INTERFACE_GROUP">
    <method name="AddMembers">
      <arg direction="in" name="contacts" type="au"/>
      <arg direction="in" name="message" type="s"/>
      <tp:docstring>
        Invite all the given contacts into the channel, or accept requests for
        channel membership for contacts on the pending local list. A message
        may be provided along with the request, which will be sent to the
        server if supported. See the CHANNEL_GROUP_FLAG_MESSAGE_ADD and
        CHANNEL_GROUP_FLAG_MESSAGE_ACCEPT flags to see in which cases this
        message should be provided.

        Parameters:
        contacts - an array of contact handles to invite to the channel
        message - a string message, which can be blank if desired

        Possible Errors:
        Disconnected, NetworkError, NotAvailable, PermissionDenied, InvalidHandle,
        Channel.Full, Channel.InviteOnly, Channel.Banned
      </tp:docstring>
    </method>
    <method name="GetAllMembers">
      <arg direction="out" type="au"/>
      <arg direction="out" type="au"/>
      <arg direction="out" type="au"/>
      <tp:docstring>
        Returns arrays all current, local and remote pending channel
        members.

        Returns:
        array of handles of current members
        array of handles of local pending members
        array of handles of remote pending members

        Possible Errors:
        Disconnected, NetworkError
      </tp:docstring>
    </method>
    <tp:flags name="ChannelGroupFlags">
      <tp:flag name="CHANNEL_GROUP_FLAG_CAN_ADD" value="1"/>
      <tp:flag name="CHANNEL_GROUP_FLAG_CAN_REMOVE" value="2"/>
      <tp:flag name="CHANNEL_GROUP_FLAG_CAN_RESCIND" value="4"/>
      <tp:flag name="CHANNEL_GROUP_FLAG_MESSAGE_ADD" value="8"/>
      <tp:flag name="CHANNEL_GROUP_FLAG_MESSAGE_REMOVE" value="16"/>
      <tp:flag name="CHANNEL_GROUP_FLAG_MESSAGE_ACCEPT" value="32"/>
      <tp:flag name="CHANNEL_GROUP_FLAG_MESSAGE_REJECT" value="64"/>
      <tp:flag name="CHANNEL_GROUP_FLAG_MESSAGE_RESCIND" value="128"/>
      <tp:flag name="CHANNEL_GROUP_FLAG_CHANNEL_SPECIFIC_HANDLES" value="256"/>
      <tp:flag name="CHANNEL_GROUP_FLAG_ONLY_ONE_GROUP" value="512"/>
    </tp:flags>
    <method name="GetGroupFlags">
      <arg direction="out" type="u"/>
      <tp:docstring>
        Returns an integer representing the logical or of flags on this
        channel. The user interface can use this to present information about
        which operations are currently valid.

        These can be:
        1 - CHANNEL_GROUP_FLAG_CAN_ADD
            The AddMembers method can be used to add or invite members who are
            not already in the local pending list (which is always valid).
        2 - CHANNEL_GROUP_FLAG_CAN_REMOVE
            The RemoveMembers method can be used to remove channel members
            (removing those on the pending local list is always valid).
        4 - CHANNEL_GROUP_FLAG_CAN_RESCIND
            The RemoveMembers method can be used on people on the remote
            pending list.
        8 - CHANNEL_GROUP_FLAG_MESSAGE_ADD
            A message may be sent to the server when calling AddMembers on
            contacts who are not currently pending members.
        16 - CHANNEL_GROUP_FLAG_MESSAGE_REMOVE
            A message may be sent to the server when calling RemoveMembers on
            contacts who are currently channel members.
        32 - CHANNEL_GROUP_FLAG_MESSAGE_ACCEPT
            A message may be sent to the server when calling AddMembers on
            contacts who are locally pending.
        64 - CHANNEL_GROUP_FLAG_MESSAGE_REJECT
            A message may be sent to the server when calling RemoveMembers on
            contacts who are locally pending.
        128 - CHANNEL_GROUP_FLAG_MESSAGE_RESCIND
            A message may be sent to the server when calling RemoveMembers on
            contacts who are remote pending.
        256 - CHANNEL_GROUP_FLAG_CHANNEL_SPECIFIC_HANDLES
            The members of this group have handles which are specific to
            this channel, and are not valid as general-purpose handles on
            the connection. Depending on the channel, it may be possible to
            call GetHandleOwners to find the owners of these handles, which
            should be done if you wish to eg subscribe to the contact's
            presence.
        512 - CHANNEL_GROUP_FLAG_ONLY_ONE_GROUP
            Placing a contact in multiple groups of this type is not allowed
            and will raise NotAvailable (on services where contacts may only
            be in one user-defined group, user-defined groups will have
            this flag).

        Returns:
        an integer of flags or'd together

        Possible Errors:
        Disconnected, NetworkError
      </tp:docstring>
    </method>
    <method name="GetHandleOwners">
      <arg direction="in" name="handles" type="au"/>
      <arg direction="out" type="au"/>
      <tp:docstring>
        If the CHANNEL_GROUP_FLAG_CHANNEL_SPECIFIC_HANDLES flag is set on
        the channel, then the handles of the group members are specific
        to this channel, and are not meaningful in a connection-wide
        context such as contact lists. This method allows you to find
        the owner of the handle if it can be discovered in this channel,
        or 0 if the owner is not available.

        Parameters:
        handles - a list of integer handles representing members of the
            channel

        Returns:
        an array of integer handles representing the owner handle of
            the the given room members, in the same order, or 0 if the
            owner is not available

        Possible Errors:
        Disconnected, NetworkError, InvalidHandle, InvalidArgument (one
        of the given handles is not a member)
      </tp:docstring>
    </method>
    <method name="GetLocalPendingMembers">
      <arg direction="out" type="au"/>
      <tp:docstring>
        Returns an array of handles representing contacts requesting
        channel membership and awaiting local approval with AddMembers.

        Possible Errors:
        Disconnected, NetworkError
      </tp:docstring>
    </method>
    <method name="GetMembers">
      <arg direction="out" type="au"/>
      <tp:docstring>
        Returns an array of handles for the members of this channel.

        Possible Errors:
        Disconnected, NetworkError
      </tp:docstring>
    </method>
    <method name="GetRemotePendingMembers">
      <arg direction="out" type="au"/>
      <tp:docstring>
        Returns an array of handles representing contacts who have been
        invited to the channel and are awaiting remote approval.

        Possible Errors:
        Disconnected, NetworkError
      </tp:docstring>
    </method>
    <method name="GetSelfHandle">
      <arg direction="out" type="u"/>
      <tp:docstring>
        Returns the handle for the user on this channel (which can also be a
        local or remote pending member) or 0 if the user not a member at all
        (which is likely to be the case, for instance, on Type.ContactList
        channels). Note that this is different from the connection
        GetSelfHandle on some protocols, so the value of this handle should
        always be used with the methods of this interface.

        Possible Errors:
        Disconnected, NetworkError
      </tp:docstring>
    </method>
    <signal name="GroupFlagsChanged">
      <arg name="added" type="u"/>
      <arg name="removed" type="u"/>
      <tp:docstring>
        Emitted when the flags as returned by GetGroupFlags are changed.
        The user interface should be updated as appropriate.

        Parameters:
        added - a logical OR of the flags which have been set
        removed - a logical OR of the flags which have been cleared
      </tp:docstring>
    </signal>
    <tp:enum name="ChannelGroupChangeReason">
      <tp:enumvalue name="CHANNEL_GROUP_CHANGE_REASON_NONE" value="0"/>
      <tp:enumvalue name="CHANNEL_GROUP_CHANGE_REASON_OFFLINE" value="1"/>
      <tp:enumvalue name="CHANNEL_GROUP_CHANGE_REASON_KICKED" value="2"/>
      <tp:enumvalue name="CHANNEL_GROUP_CHANGE_REASON_BUSY" value="3"/>
      <tp:enumvalue name="CHANNEL_GROUP_CHANGE_REASON_INVITED" value="4"/>
      <tp:enumvalue name="CHANNEL_GROUP_CHANGE_REASON_BANNED" value="5"/>
      <tp:enumvalue name="CHANNEL_GROUP_CHANGE_REASON_ERROR" value="6"/>
    </tp:enum>
    <signal name="MembersChanged">
      <arg name="message" type="s"/>
      <arg name="added" type="au"/>
      <arg name="removed" type="au"/>
      <arg name="local_pending" type="au"/>
      <arg name="remote_pending" type="au"/>
      <arg name="actor" type="u"/>
      <arg name="reason" type="u"/>
      <tp:docstring>
        Emitted when contacts join any of the three lists (members, local
        pending or remote pending).  Contacts are listed in the removed
        list when they leave any of the three lists. There may also be
        a message from the server regarding this change, which may be
        displayed to the user if desired.

        The reason value will be one of the following:
        0 - CHANNEL_GROUP_CHANGE_REASON_NONE
            No reason was provided for this change.
        1 - CHANNEL_GROUP_CHANGE_REASON_OFFLINE
            The change is due to a user going offline.
        2 - CHANNEL_GROUP_CHANGE_REASON_KICKED
            The change is due to a kick operation.
        3 - CHANNEL_GROUP_CHANGE_REASON_BUSY
            The change is due to a busy indication.
        4 - CHANNEL_GROUP_CHANGE_REASON_INVITED
            The change is due to an invitation.
        5 - CHANNEL_GROUP_CHANGE_REASON_BANNED
            The change is due to a kick+ban operation.
        6 - CHANNEL_GROUP_CHANGE_REASON_ERROR
            The change is due to an error occurring.

        Parameters:
        message - a string message from the server, or blank if not
        added - a list of members added to the channel
        removed - a list of members removed from the channel
        local_pending - a list of members who are pending local approval
        remote_pending - a list of members who are pending remote approval
        actor - the contact handle of the person who made the change, or 0
            if not known
        reason - a reason for the change from one of the above values
      </tp:docstring>
    </signal>
    <method name="RemoveMembers">
      <arg direction="in" name="contacts" type="au"/>
      <arg direction="in" name="message" type="s"/>
      <tp:docstring>
        Requests the removal of contacts from a channel, reject their request
        for channel membership on the pending local list, or rescind their
        invitation on the pending remote list. A message may be provided along
        with the request, which will be sent to the server if supported. See
        the CHANNEL_GROUP_FLAG_MESSAGE_REMOVE,
        CHANNEL_GROUP_FLAG_MESSAGE_REJECT and
        CHANNEL_GROUP_FLAG_MESSAGE_RESCIND flags to see in which cases this
        message should be provided.

        Parameters:
        contacts - an array of contact handles to remove from the channel
        message - a string message, which can be blank if desired

        Possible Errors:
        Disconnected, NetworkError, NotAvailable, PermissionDenied, InvalidHandle
      </tp:docstring>
    </method>
    <tp:docstring>
      Interface for channels which have multiple members, and where the members
    of the channel can change during its lifetime. Your presence in the channel
    cannot be presumed by the channel's existence (for example, a channel you
    may request membership of but your request may not be granted).

    This interface implements three lists: a list of current members, and two
    lists of local pending and remote pending members. Contacts on the remote
    pending list have been invited to the channel, but the remote user has not
    accepted the invitation. Contacts on the local pending list have requested
    membership of the channel, but the local user of the framework must accept
    their request before they may join. A single contact should never appear on
    more than one of the three lists. The lists are empty when the channel is
    created, and the MembersChanged signal should be emitted when information
    is retrieved from the server, or changes occur.

    Addition of members to the channel may be requested by using AddMembers. If
    remote acknowledgement is required, use of the AddMembers method will cause
    users to appear on the remote pending list. If no acknowledgement is
    required, AddMembers will add contacts to the member list directly.  If a
    contact is awaiting authorisation on the local pending list, AddMembers
    will grant their membership request.

    Removal of contacts from the channel may be requested by using
    RemoveMembers.  If a contact is awaiting authorisation on the local pending
    list, RemoveMembers will refuse their membership request. If a contact is
    on the remote pending list but has not yet accepted the invitation,
    RemoveMembers will rescind the request if possible.

    It should not be presumed that the requester of a channel implementing this
    interface is immediately granted membership, or indeed that they are a
    member at all, unless they appear in the list. They may, for instance,
    be placed into the remote pending list until a connection has been
    established or the request acknowledged remotely.
    </tp:docstring>
  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
