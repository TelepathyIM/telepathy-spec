<?xml version="1.0" ?>
<node name="/ChannelInterfaceHold" xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright>
    Copyright (C) 2005, 2006 Collabora Limited
Copyright (C) 2005, 2006 Nokia Corporation
Copyright (C) 2006 INdT
  </tp:copyright>
  <tp:license>
    This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  </tp:license>
  <interface name="org.freedesktop.Telepathy.Channel.Interface.Hold" tp:name-const="CHANNEL_INTERFACE_HOLD">
    <method name="GetHoldState">
      <arg direction="in" name="member" type="u"/>
      <arg direction="out" type="u"/>
      <tp:docstring>
        Given a member of the channel, return their current hold state. This
        can be one of the following values:
        0 - CHANNEL_HOLD_STATE_NONE
            Neither the local user and the remote member are on hold, and media
            is being sent bidirectionally.
        1 - CHANNEL_HOLD_STATE_SEND_ONLY
            The local user has put the remote member on hold, so is sending
            media but has arranged not to receive any media streams.
        2 - CHANNEL_HOLD_STATE_RECV_ONLY
            The user has been put on hold by the remote member, so is receiving
            media but has arranged not to send any media streams.
        3 - CHANNEL_HOLD_STATE_BOTH
            Both the local user and the remote member have agreed not to send
            any media streams to each other.

        Parameters:
        member - the handle of a member of the channel

        Returns:
        state - an integer representing the hold state, as defined above

        Potential Errors:
        Disconnected, InvalidHandle
      </tp:docstring>
    </method>
    <signal name="HoldStateChanged">
      <arg name="member" type="u"/>
      <arg name="state" type="u"/>
      <tp:docstring>
        Emitted to indicate that the hold state (as defined in GetHoldState
        above) has changed for a member of this channel. This may occur as
        a consequence of you requesting a change with RequestHold, or the
        state changing as a result of a request from the remote member
        or another process.

        Parameters:
        member - the integer handle of a member of the channel
        state - an integer representing the new hold state
      </tp:docstring>
    </signal>
    <method name="RequestHold">
      <arg direction="in" name="member" type="u"/>
      <arg direction="in" name="hold" type="b"/>
      <tp:docstring>
        Request that a certain member be put on hold (be instructed not to send
        any media streams to you) or be taken off hold. Success is indicated
        by the HoldStateChanged signal being emitted.

        Parameters:
        member - the integer handle of a member of the channel
        hold - an boolean indicating whether or not the user should be on hold

        Potential Errors:
        Disconnected, NetworkError, InvalidHandle
      </tp:docstring>
    </method>
    <tp:docstring>
      THIS INTERFACE IS DEPRECATED AND SHOULD NOT BE USED. Hold functionality
    should be added to the StreamedMedia channel in due course.

    Interface for channels where members may put you on hold, or you may put
    members on hold. This usually only makes sense for channels where you are
    streaming media to or from the members. Hold is defined as requesting
    that you are not sent any media streams by another, so these states
    indicate whether or not you are sending and receiving media streams
    to each member of the channel.
    </tp:docstring>
  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
