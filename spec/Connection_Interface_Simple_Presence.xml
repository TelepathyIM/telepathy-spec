<?xml version="1.0" ?>
<node name="/Connection_Interface_Simple_Presence" xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright> Copyright (C) 2005-2008 Collabora Limited </tp:copyright>
  <tp:copyright> Copyright (C) 2005, 2006 Nokia Corporation </tp:copyright>
  <tp:copyright> Copyright (C) 2006 INdT </tp:copyright>
  <tp:license xmlns="http://www.w3.org/1999/xhtml">
    <p>This library is free software; you can redistribute it and/or modify it
      under the terms of the GNU Lesser General Public License as published by
      the Free Software Foundation; either version 2.1 of the License, or (at
      your option) any later version.</p>

    <p>This library is distributed in the hope that it will be useful, but
      WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser
      General Public License for more details.</p>

    <p>You should have received a copy of the GNU Lesser General Public License
      along with this library; if not, write to the Free Software Foundation,
      Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</p>
  </tp:license>
  <interface name="org.freedesktop.Telepathy.Connection.Interface.SimplePresence">
    <tp:requires interface="org.freedesktop.Telepathy.Connection"/>

    <tp:struct name="Simple_Presence">
      <tp:docstring>
        A struct representing the presence of a contact.
      </tp:docstring>
      <tp:member type="u" tp:type="Connection_Presence_Type" name="Type">
        <tp:docstring>
          The presence type, e.g. Connection_Presence_Type_Away.
        </tp:docstring>
      </tp:member>
      <tp:member type="s" name="Status">
        <tp:docstring>
          The string identifier of the status, e.g. "brb", as defined in the
          Statuses property.
        </tp:docstring>
      </tp:member>
      <tp:member type="s" name="Status_Message">
        <tp:docstring>
          The user-defined status message, e.g. "Back soon!". User interfaces
          should regard "" as unset.
        </tp:docstring>
      </tp:member>
    </tp:struct>

    <tp:mapping name="Simple_Contact_Presences">
      <tp:docstring>
        Mapping returned by GetPresences and signalled by PresencesChanged,
        where the keys are contacts and the values represent their
        presence.
      </tp:docstring>
      <tp:member type="u" tp:type="Contact_Handle" name="Contact"/>
      <tp:member type="(ss)" tp:type="Simple_Presence" name="Presence"/>
    </tp:mapping>

    <tp:struct name="Simple_Status_Spec">
      <tp:docstring>
        A struct containing information about a status.
      </tp:docstring>
      <tp:member type="u" tp:type="Connection_Presence_Type"
        name="Type">
        <tp:docstring>
          The type of a presence. If the status identifier is unknown to a
          client, this value should be used a hint.
        </tp:docstring>
      </tp:member>
      <tp:member type="b" name="May_Set_On_Self">
        <tp:docstring>
          Whether or not this status may be set on the connection using
          SetPresence.
        </tp:docstring>
      </tp:member>
    </tp:struct>

    <tp:mapping name="Simple_Status_Spec_Map">
      <tp:member type="s" name="Identifier">
        <tp:docstring>
          The string identifier of this status.
        </tp:docstring>
      </tp:member>
      <tp:member type="(ub)" tp:type="Simple_Status_Spec" name="Spec"/>
    </tp:mapping>

    <method name="SetPresence">
      <arg direction="in" name="status" type="s">
        <tp:docstring>
          The string identifier of the desired status. Possible status
          identifiers are defined in the Statuses property.
        </tp:docstring>
      </arg>
      <arg direction="in" name="status_message" type="s">
        <tp:docstring>
          The status message associated with the current status.
        </tp:docstring>
      </arg>
      <tp:docstring>
        Request that the presence status and status message are published for
        the connection.  Changes will be indicated by PresencesChanged signals
        being emitted. On certain protocols, this method may be called on a
        newly-created connection which is still in the DISCONNECTED state, and
        will sign on with the requested status. In DISCONNECTED state the
        Statuses property will indicate which statuses are allowed to be set
        while DISCONNECTED (none if the Connection Manager doesn't allow this),
        this value should not be cached as the set of allowed presences might
        change upon connecting.
      </tp:docstring>
      <tp:possible-errors>
        <tp:error name="org.freedesktop.Telepathy.Error.Disconnected"/>
        <tp:error name="org.freedesktop.Telepathy.Error.NetworkError"/>
        <tp:error name="org.freedesktop.Telepathy.Error.InvalidArgument"/>
        <tp:error name="org.freedesktop.Telepathy.Error.NotAvailable"/>
        <tp:error name="org.freedesktop.Telepathy.Error.PermissionDenied"/>
      </tp:possible-errors>
    </method>
    <method name="GetPresences">
      <arg direction="in" name="contacts" type="au" tp:type="Contact_Handle[]">
        <tp:docstring>
          An array of the contacts whose presence should be obtained.
        </tp:docstring>
      </arg>
      <arg direction="out" name="presence" type="a{u(ss)}"
        tp:type="Simple_Contact_Presences">
        <tp:docstring>
          Presence information in the same format as for the PresencesChanged
          signal.
        </tp:docstring>
      </arg>
      <tp:docstring>
        Get presence previously emitted by PresencesChanged for the given
        contacts. Data is returned in the same structure as the
        PresencesChanged signal.
      </tp:docstring>
      <tp:possible-errors>
        <tp:error name="org.freedesktop.Telepathy.Error.Disconnected"/>
        <tp:error name="org.freedesktop.Telepathy.Error.InvalidHandle"/>
        <tp:error name="org.freedesktop.Telepathy.Error.NotAvailable"/>
      </tp:possible-errors>
    </method>

    <property name="Statuses" access="read"
      type="a{s(ub)}" tp:type="Status_Spec_Map">
      <tp:docstring>
        A dictionary of the valid presence statuses for this connection. While
        DISCONNECTED it contains the set of presence statuses allowed to be set
        before connecting, which should not be cached as the value can
        change when CONNECTED. When CONNECTED it contains the presence
        statuses available on this protocol.
      </tp:docstring>
    </property>

    <signal name="PresencesChanged">
      <arg name="presence" type="a{u(ss)}" tp:type="Contact_Presences">
        <tp:docstring>
        A dictionary of contact handles mapped to the status and status
        message.
        </tp:docstring>
      </arg>
      <tp:docstring>
        This signal should be emitted when your own presence has been changed,
        or the presence of the member of any of the connection's channels has
        been changed.
      </tp:docstring>
    </signal>

    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>This interface is for services which have a concept of presence which
        can be published for yourself and monitored on your contacts.</p>

      <p>Presence on an individual (yourself or one of your contacts) is
        modelled as a status and a status message. Valid statuses are defined
        per connection, and a list of them can be obtained from the Statuses
        property.</p>

      <p>Each status has an arbitrary string identifier which should have an
        agreed meaning between the connection manager and any client which is
        expected to make use of it. The following well-known values should be
        used where possible to allow clients to identify common choices:</p>

      <ul>
        <li>available</li>
        <li>away</li>
        <li>brb (Be Right Back)</li>
        <li>busy</li>
        <li>dnd (Do Not Disturb),</li>
        <li>xa (Extended Away)</li>
        <li>hidden (aka Invisible)</li>
        <li>offline</li>
        <li>unknown</li>
        <li>error</li>
      </ul>

      <p>As well as these well-known status identifiers, every status also has
        a numerical type value chosen from ConnectionPresenceType which can be
        used by the client to classify even unknown statuses into different
        fundamental types.</p>

      <p>These numerical types exist so that even if a client does not
        understand the string identifier being used, and hence cannot present
        the presence to the user to set on themselves, it may display an
        approximation of the presence if it is set on a contact.</p>

      <p>Apart from these status indentifiers there are two special ones that
        may be present. 'unknown' with type Unknown and 'error' with type
        Error. 'unknown' indicates that it is impossible to determine the
        presence of a contact at this time, for example because it's not on the
        'subscibe' list and the protocol only allows one to determine the
        presence of contacts you're subscribed to. 'error' indicates that there
        was a failure in determining the status of a contact.</p>

      <p>If the connection has a 'subscribe' contact list, PresencesChanged
        signals should be emitted to indicate changes of contacts on this list,
        and should also be emitted for changes in your own presence. Depending
        on the protocol, the signal may also be emitted for others such as
        people with whom you are communicating, and any user interface should
        be updated accordingly.</p>
    </tp:docstring>
  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
