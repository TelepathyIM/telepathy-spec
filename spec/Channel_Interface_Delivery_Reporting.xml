<?xml version="1.0" ?>
<node name="/Channel_Interface_Delivery_Reporting"
  xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright>Copyright (C) 2008 Collabora Ltd.</tp:copyright>
  <tp:copyright>Copyright (C) 2008 Nokia Corporation</tp:copyright>
  <tp:license xmlns="http://www.w3.org/1999/xhtml">
    <p>This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.</p>

<p>This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.</p>

<p>You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</p>
  </tp:license>
  <interface
    name="org.freedesktop.Telepathy.Channel.Interface.DeliveryReporting.DRAFT"
    tp:causes-havoc="experimental">
    <tp:requires interface="org.freedesktop.Telepathy.Channel.Type.Text"/>
    <tp:requires interface="org.freedesktop.Telepathy.Channel.Interface.Messages"/>
    <tp:added version="0.17.5">(draft version, not API-stable)</tp:added>

    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>This interface extends the Text and Messages interfaces with improved
        sent-message status reporting.</p>

      <p>This interface replaces Text.SendError, adding support for protocols
        where the message content is not echoed back to the sender on
        failure. It also adds support for receiving positive
        acknowledgements, and uses the Messages queue for state-recovery
        (ensuring that incoming delivery reports are not lost if there is not
        currently a process handling them).</p>

      <p>If this interface and the Messages interface are both present,
        clients that support it SHOULD listen for the MessageReceived signal
        to get delivery reports, and ignore the SendError signal on the Text
        interface.</p>

      <p>Delivery reports appear as messages of type
        Channel_Text_Message_Type_Delivery_Report in the Text and Messages
        interfaces. The message in the Text interface SHOULD have the
        Non_Text_Content flag.</p>
    </tp:docstring>

  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
