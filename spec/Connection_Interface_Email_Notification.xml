<?xml version="1.0" ?>
<node name="/Connection_Interface_Mail_Notification"
  xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0"
  >
  <tp:copyright> Copyright (C) 2007 Collabora Limited </tp:copyright>
  <tp:license xmlns="http://www.w3.org/1999/xhtml">
    <p>This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.</p>

<p>This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.</p>

<p>You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</p>
  </tp:license>
  <interface
    name="org.freedesktop.Telepathy.Connection.Interface.EmailNotification.DRAFT"
    tp:causes-havoc="experimental">
    <tp:requires interface="org.freedesktop.Telepathy.Connection"/>

    <property name="UnreadMailCount" type="u" access="read"
      tp:name-for-bindings="Unread_Mail_Count">
      <tp:docstring>
        The number of unread messages in the inbox.
      </tp:docstring>
    </property>

    <property name="URL" type="s" tp:name-for-bindings="URL"
      access="read">
      <tp:docstring>
          URL of the inbox
      </tp:docstring>
    </property>

    <property name="Cookies" type="a(ss)" tp:name-for-bindings="Cookies"
      access="read">
      <tp:docstring>
        Array of name-value pair structs of the cookies to use when
        opening the inbox, if any
      </tp:docstring>
    </property>

    <signal name="MailReceived" tp:name-for-bindings="Mail_Received">
      <arg name="url" type="s">
        <tp:docstring>
          The URL to use for displaying the message, if possible; if a
          URL for this particular message is not available, this should
          be the empty string (in which case a user interface might
          direct the user to <tp:member-ref>URL</tp:member-ref>).
        </tp:docstring>
      </arg>
      <arg name="cookies" type="a(ss)">
        <tp:docstring>
          Array of name-value pair structs of the cookies to use when displaying
          the message, if any.
        </tp:docstring>
      </arg>
      <arg name="details" type="a{sv}">
        <tp:docstring>
          A mapping of well known string keys to variant values of details of
          the message.
        </tp:docstring>
      </arg>
      <tp:docstring>
        Emitted when a new e-mail message arrives to the inbox associated with
        this connection. The notification may have detailed information in the
        details hash table. For this information, the following well-known
        string keys and types should be used where appropriate:

        <dl>
          <dt>s:sender-address</dt>
          <dd>The e-mail address of the sender.</dd>

          <dt>s:sender-displayname</dt>
          <dd>The display name of the sender.</dd>

          <dt>s:to-addresses</dt>
          <dd>A comma-separated string list of e-mail addresses of the recipients.</dd>

          <dt>s:cc-addresses</dt>
          <dd>A comma-separated string list of e-mail addresses of the carbon copy recipients.</dd>

          <dt>s:subject</dt>
          <dd>The subject of the message.</dd>

          <dt>u:sent-timestamp</dt>
          <dd>A UNIX timestamp of when the message has been sent.</dd>

          <dt>u:received-timestamp</dt>
          <dd>A UNIX timestamp of when the message has been received.</dd>

          <dt>b:has-attachments</dt>
          <dd>A boolean of whether this message has attachments.</dd>

          <dt>s:priority</dt>
          <dd>Priority of the message (1, 2, 3, low, medium, high, ...)</dd>

          <dt>s:content-type</dt>
          <dd>MIME type of the message contents.</dd>

          <dt>s:body</dt>
          <dd>The body of the message.</dd>
        </dl>
      </tp:docstring>
    </signal>
    <signal name="UnreadMailStatusChanged"
      tp:name-for-bindings="Unread_Mail_Status_Changed">
      <arg name="count" type="u">
        <tp:docstring>
          Number of unread messages in the inbox (the new value of
          <tp:member-ref>UnreadMailCount</tp:member-ref>).
        </tp:docstring>
      </arg>
      <arg name="url" type="s">
        <tp:docstring>
          URL of the inbox (the new value of
          <tp:member-ref>URL</tp:member-ref>).
        </tp:docstring>
      </arg>
      <arg name="cookies" type="a(ss)">
        <tp:docstring>
          Array of name-value pair structs of the cookies to use when opening
          the inbox, if any (the new value of
          <tp:member-ref>Cookies</tp:member-ref>).
        </tp:docstring>
      </arg>
      <tp:docstring>
        Emitted when the unread message status for the user's inbox changes or
        the value has been initially received from the server.
      </tp:docstring>
    </signal>
    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>An interface to support receiving notifications about a e-mail
        account associated with this connection. It is intended that the
        connection manager has the means to provide necessary
        information (URL, cookies) so that the client is able to open
        the user's inbox and possibly individual messages without having
        to re-authenticate.</p>

      <p>When the number of unread e-mails in the inbox changes, the
        <tp:member-ref>UnreadMailStatusChanged</tp:member-ref> signal
        will be emitted, with the new values of
        <tp:member-ref>UnreadMailCount</tp:member-ref>,
        <tp:member-ref>URL</tp:member-ref>, and
        <tp:member-ref>Cookies</tp:member-ref>. Some protocols also
        provide information about the individual messages received. On
        such protocols, the <tp:member-ref>MailReceived</tp:member-ref>
        signal will also be emitted, with information about the e-mail
        (and possibly a URL to display that particular e-mail, rather than
        the inbox).</p>

      <!-- FIXME: Are there any protocols that give you the latter but
           not the former?
        -->
    </tp:docstring>
  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->

