<?xml version="1.0" ?>
<node name="/Channel_Dispatcher"
  xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright>Copyright (C) 2008 Collabora Ltd.</tp:copyright>
  <tp:copyright>Copyright (C) 2008 Nokia Corporation</tp:copyright>
  <tp:license xmlns="http://www.w3.org/1999/xhtml">
<p>This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.</p>

<p>This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.</p>

<p>You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
</p>
  </tp:license>
  <interface name="org.freedesktop.Telepathy.ChannelDispatcher.DRAFT"
    tp:causes-havoc="experimental">
    <tp:docstring xmlns="http://www.w3.org/1999/xhtml">
      <p>The channel dispatcher is responsible for responding to new
        channels and launching client processes to handle them.</p>

      <p>There are three categories of client process defined by this
        specification:</p>

      <dl>
        <dt>Observer</dt>
        <dd><p>Observers monitor the creation of new channels. This
            functionality can be used for things like message logging.
            All observers are notified simultaneously.</p></dd>

        <dt>Approver</dt>
        <dd>
          <p>Approvers notify the user that new channels have been created,
            and also select which channel handler will be used for the channel,
            either by asking the user or by choosing the most appropriate
            channel handler.</p>
        </dd>

        <dt>Channel handler</dt>
        <dd>
          <p>Channel handlers are the eventual handler for a channel or a
            channel bundle; a typical channel handler is a user interface
            process handling channels of a particular type.</p>
        </dd>
      </dl>
    </tp:docstring>

    <property name="Interfaces" type="as" access="read"
      tp:type="DBus_Interface[]">
      <tp:docstring>
        A list of the extra interfaces provided by this channel dispatcher.
      </tp:docstring>
    </property>

    <property name="Dispatch_Operations" type="ao" access="read">
      <tp:docstring>
        The list of ChannelDispatchOperation objects currently being
        processed. Change notification is via the NewDispatch and
        DispatchFinished signals.
      </tp:docstring>
    </property>

    <signal name="NewDispatchOperation">
      <arg name="Dispatch_Operation" type="o">
      </arg>

      <!-- FIXME: copy the Channel_Announcement_Flags from
      Connection.Interface.Requests? -->

      <arg name="Channels" type="a(oa{sv})" tp:type="Channel_Details[]">
      </arg>
    </signal>

    <signal name="DispatchOperationClosed">
      <tp:docstring>
        Emitted when a dispatch operation finishes (i.e. exactly once per
        emission of ChannelDispatchOperation.Close).

        <tp:rationale>
          Strictly speaking this is redundant with
          ChannelDispatchOperation.Closed, but it provides full
          change-notification for the DispatchOperations property.
        </tp:rationale>
      </tp:docstring>

      <arg name="Dispatch_Operation" type="o">
        The dispatch operation that was closed.
      </arg>
    </signal>

  </interface>
</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
